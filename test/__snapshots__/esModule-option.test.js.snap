// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`"esModule" option should emit error when class has unsupported name: errors 1`] = `
Array [
  "ModuleParseError: Module parse failed: Unexpected keyword 'class' (7:13)
File was processed with these loaders:",
]
`;

exports[`"esModule" option should emit error when class has unsupported name: warnings 1`] = `Array []`;

exports[`"esModule" option should emit error when namedExport true && esModule false: errors 1`] = `
Array [
  "ModuleError: Module Error (from \`replaced original path\`):
\`Options.module.namedExport\` cannot be used without \`options.esModule\`",
]
`;

exports[`"esModule" option should work js template with "namedExport" option: errors 1`] = `Array []`;

exports[`"esModule" option should work js template with "namedExport" option: module 1`] = `
"// Imports
import ___CSS_LOADER_API_IMPORT___ from \\"../../../../../src/runtime/api.js\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".header-baz {\\\\n  color: red;\\\\n}\\\\n\\\\n.body {\\\\n  color: coral;\\\\n}\\\\n\\\\n.footer {\\\\n  color: blue;\\\\n}\\\\n\\", \\"\\"]);
// Exports
export const headerBaz = \\"header-baz\\";
export const body = \\"body\\";
export const footer = \\"footer\\";

export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"esModule" option should work js template with "namedExport" option: result 1`] = `
Object {
  "css": Array [
    Array [
      "./es-module/named/template/index.css",
      ".header-baz {
  color: red;
}

.body {
  color: coral;
}

.footer {
  color: blue;
}
",
      "",
    ],
  ],
  "html": "
<div class=\\"header-baz\\">
<div class=\\"body\\">
<div class=\\"footer\\">
",
}
`;

exports[`"esModule" option should work js template with "namedExport" option: warnings 1`] = `Array []`;

exports[`"esModule" option should work when not specified: errors 1`] = `Array []`;

exports[`"esModule" option should work when not specified: module 1`] = `
"// Imports
var ___CSS_LOADER_API_IMPORT___ = require(\\"../../../src/runtime/api.js\\");
var ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\\"-!../../../src/index.js??[ident]!./imported.css\\");
var ___CSS_LOADER_GET_URL_IMPORT___ = require(\\"../../../src/runtime/getUrl.js\\");
var ___CSS_LOADER_URL_IMPORT_0___ = require(\\"./img.png\\");
___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\"@charset \\\\\\"UTF-8\\\\\\";\\\\n\\\\n/* Comment */\\\\n\\\\n.class {\\\\n  color: red;\\\\n  background: url(\\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \\");\\\\n}\\\\n\\", \\"\\"]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___;
"
`;

exports[`"esModule" option should work when not specified: result 1`] = `
Array [
  Array [
    "../../src/index.js?[ident]!./es-module/imported.css",
    ".foo {
  color: red;
}
",
    "",
  ],
  Array [
    "./es-module/source.css",
    "@charset \\"UTF-8\\";

/* Comment */

.class {
  color: red;
  background: url(/webpack/public/path/img.png);
}
",
    "",
  ],
]
`;

exports[`"esModule" option should work when not specified: warnings 1`] = `Array []`;

exports[`"esModule" option should work with "namedExport" option with nested import: errors 1`] = `Array []`;

exports[`"esModule" option should work with "namedExport" option with nested import: module 1`] = `
"// Imports
import ___CSS_LOADER_API_IMPORT___ from \\"../../../../../src/runtime/api.js\\";
import ___CSS_LOADER_ICSS_IMPORT_0___, * as ___CSS_LOADER_ICSS_IMPORT_0____NAMED___ from \\"-!../../../../../src/index.js??[ident]!../../../modules/composes/values.css\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_ICSS_IMPORT_0___, \\"\\", true);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".lOpALu8t_iv2-GccTMbIq {\\\\n  color: \\" + ___CSS_LOADER_ICSS_IMPORT_0____NAMED___[\\"vDef\\"] + \\";\\\\n}\\\\n\\", \\"\\"]);
// Exports
export const vDef = \\"\\" + ___CSS_LOADER_ICSS_IMPORT_0____NAMED___[\\"vDef\\"] + \\"\\";
export const ghi = \\"lOpALu8t_iv2-GccTMbIq\\";

export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"esModule" option should work with "namedExport" option with nested import: result 1`] = `
Array [
  Array [
    "../../src/index.js?[ident]!./modules/composes/values.css",
    "
",
    "",
  ],
  Array [
    "./es-module/named/nested/index.css",
    ".lOpALu8t_iv2-GccTMbIq {
  color: red;
}
",
    "",
  ],
]
`;

exports[`"esModule" option should work with "namedExport" option with nested import: warnings 1`] = `Array []`;

exports[`"esModule" option should work with "namedExport" option: errors 1`] = `Array []`;

exports[`"esModule" option should work with "namedExport" option: module 1`] = `
"// Imports
import ___CSS_LOADER_API_IMPORT___ from \\"../../../../../src/runtime/api.js\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".jSf5EjnYI1bvqKHBrOPz6 {\\\\n  color: red;\\\\n}\\\\n\\\\n.bar {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\"]);
// Exports
export const barBaz = \\"jSf5EjnYI1bvqKHBrOPz6\\";

export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"esModule" option should work with "namedExport" option: result 1`] = `
Array [
  Array [
    "./es-module/named/base/index.css",
    ".jSf5EjnYI1bvqKHBrOPz6 {
  color: red;
}

.bar {
  color: red;
}
",
    "",
  ],
]
`;

exports[`"esModule" option should work with "namedExport" option: warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "false": module 1`] = `
"// Imports
var ___CSS_LOADER_API_IMPORT___ = require(\\"../../../src/runtime/api.js\\");
var ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\\"-!../../../src/index.js??[ident]!./imported.css\\");
var ___CSS_LOADER_GET_URL_IMPORT___ = require(\\"../../../src/runtime/getUrl.js\\");
var ___CSS_LOADER_URL_IMPORT_0___ = require(\\"./img.png\\");
___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\"@charset \\\\\\"UTF-8\\\\\\";\\\\n\\\\n/* Comment */\\\\n\\\\n.class {\\\\n  color: red;\\\\n  background: url(\\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \\");\\\\n}\\\\n\\", \\"\\"]);
// Exports
module.exports = ___CSS_LOADER_EXPORT___;
"
`;

exports[`"esModule" option should work with a value equal to "false": result 1`] = `
Array [
  Array [
    "../../src/index.js?[ident]!./es-module/imported.css",
    ".foo {
  color: red;
}
",
    "",
  ],
  Array [
    "./es-module/source.css",
    "@charset \\"UTF-8\\";

/* Comment */

.class {
  color: red;
  background: url(/webpack/public/path/img.png);
}
",
    "",
  ],
]
`;

exports[`"esModule" option should work with a value equal to "false": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and the "mode" value equal to "global": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and the "mode" value equal to "global": module 1`] = `
"// Imports
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??[ident]!./imported.css\\";
import ___CSS_LOADER_GET_URL_IMPORT___ from \\"../../../src/runtime/getUrl.js\\";
import ___CSS_LOADER_URL_IMPORT_0___ from \\"./img.png\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\"@charset \\\\\\"UTF-8\\\\\\";\\\\n\\\\n/* Comment */\\\\n\\\\n.class {\\\\n  color: red;\\\\n  background: url(\\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \\");\\\\n}\\\\n\\", \\"\\"]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"esModule" option should work with a value equal to "true" and the "mode" value equal to "global": result 1`] = `
Array [
  Array [
    "../../src/index.js?[ident]!./es-module/imported.css",
    ".foo {
  color: red;
}
",
    "",
  ],
  Array [
    "./es-module/source.css",
    "@charset \\"UTF-8\\";

/* Comment */

.class {
  color: red;
  background: url(/webpack/public/path/img.png);
}
",
    "",
  ],
]
`;

exports[`"esModule" option should work with a value equal to "true" and the "mode" value equal to "global": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and the "mode" value equal to "local": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and the "mode" value equal to "local": module 1`] = `
"// Imports
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??[ident]!./imported.css\\";
import ___CSS_LOADER_GET_URL_IMPORT___ from \\"../../../src/runtime/getUrl.js\\";
import ___CSS_LOADER_URL_IMPORT_0___ from \\"./img.png\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\"@charset \\\\\\"UTF-8\\\\\\";\\\\n\\\\n/* Comment */\\\\n\\\\n._2uMy1nigdepJE7b3T1Visj {\\\\n  color: red;\\\\n  background: url(\\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \\");\\\\n}\\\\n\\", \\"\\"]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	\\"class\\": \\"_2uMy1nigdepJE7b3T1Visj\\"
};
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"esModule" option should work with a value equal to "true" and the "mode" value equal to "local": result 1`] = `
Array [
  Array [
    "../../src/index.js?[ident]!./es-module/imported.css",
    "._3zJoIAkhorFsUbhn0phThb {
  color: red;
}
",
    "",
  ],
  Array [
    "./es-module/source.css",
    "@charset \\"UTF-8\\";

/* Comment */

._2uMy1nigdepJE7b3T1Visj {
  color: red;
  background: url(/webpack/public/path/img.png);
}
",
    "",
  ],
]
`;

exports[`"esModule" option should work with a value equal to "true" and the "mode" value equal to "local": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and the "mode" value equal to "pure": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true" and the "mode" value equal to "pure": module 1`] = `
"// Imports
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??[ident]!./imported.css\\";
import ___CSS_LOADER_GET_URL_IMPORT___ from \\"../../../src/runtime/getUrl.js\\";
import ___CSS_LOADER_URL_IMPORT_0___ from \\"./img.png\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\"@charset \\\\\\"UTF-8\\\\\\";\\\\n\\\\n/* Comment */\\\\n\\\\n._2uMy1nigdepJE7b3T1Visj {\\\\n  color: red;\\\\n  background: url(\\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \\");\\\\n}\\\\n\\", \\"\\"]);
// Exports
___CSS_LOADER_EXPORT___.locals = {
	\\"class\\": \\"_2uMy1nigdepJE7b3T1Visj\\"
};
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"esModule" option should work with a value equal to "true" and the "mode" value equal to "pure": result 1`] = `
Array [
  Array [
    "../../src/index.js?[ident]!./es-module/imported.css",
    "._3zJoIAkhorFsUbhn0phThb {
  color: red;
}
",
    "",
  ],
  Array [
    "./es-module/source.css",
    "@charset \\"UTF-8\\";

/* Comment */

._2uMy1nigdepJE7b3T1Visj {
  color: red;
  background: url(/webpack/public/path/img.png);
}
",
    "",
  ],
]
`;

exports[`"esModule" option should work with a value equal to "true" and the "mode" value equal to "pure": warnings 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true": errors 1`] = `Array []`;

exports[`"esModule" option should work with a value equal to "true": module 1`] = `
"// Imports
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??[ident]!./imported.css\\";
import ___CSS_LOADER_GET_URL_IMPORT___ from \\"../../../src/runtime/getUrl.js\\";
import ___CSS_LOADER_URL_IMPORT_0___ from \\"./img.png\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(false);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
var ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\"@charset \\\\\\"UTF-8\\\\\\";\\\\n\\\\n/* Comment */\\\\n\\\\n.class {\\\\n  color: red;\\\\n  background: url(\\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \\");\\\\n}\\\\n\\", \\"\\"]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"esModule" option should work with a value equal to "true": result 1`] = `
Array [
  Array [
    "../../src/index.js?[ident]!./es-module/imported.css",
    ".foo {
  color: red;
}
",
    "",
  ],
  Array [
    "./es-module/source.css",
    "@charset \\"UTF-8\\";

/* Comment */

.class {
  color: red;
  background: url(/webpack/public/path/img.png);
}
",
    "",
  ],
]
`;

exports[`"esModule" option should work with a value equal to "true": warnings 1`] = `Array []`;
