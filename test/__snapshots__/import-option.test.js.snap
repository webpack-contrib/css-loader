// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`"import" option should keep original order: errors 1`] = `[]`;

exports[`"import" option should keep original order: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./order-1.css";
import ___CSS_LOADER_AT_RULE_IMPORT_1___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./order-2.css";
import ___CSS_LOADER_AT_RULE_IMPORT_2___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./order-3.css";
import ___CSS_LOADER_AT_RULE_IMPORT_3___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./order-4.css";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
___CSS_LOADER_EXPORT___.push([module.id, "@import url(http://example.com/style.css);"]);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);
___CSS_LOADER_EXPORT___.push([module.id, "@import url(http://example.com/style.css);"]);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
___CSS_LOADER_EXPORT___.push([module.id, "@import url(http://example.com/style.css);"]);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___, "screen and (min-width: 2000px)");
___CSS_LOADER_EXPORT___.push([module.id, "@import url(http://example.com/style.css);"]);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_2___);
___CSS_LOADER_EXPORT___.push([module.id, "@import url(http://example.com/style.css);"]);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_3___, "screen");
// Module
___CSS_LOADER_EXPORT___.push([module.id, "div {\\r\\n  width: 100%;\\r\\n  height: 200px;\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should keep original order: result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/order-1.css",
    ".order-1 {
  color: red;
}
",
    "",
  ],
  [
    "./import/order.css",
    "@import url(http://example.com/style.css);",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/order-2.css",
    ".order-2 {
  color: red;
}
",
    "",
  ],
  [
    "./import/order.css",
    "@import url(http://example.com/style.css);",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/order-1.css",
    ".order-1 {
  color: red;
}
",
    "",
  ],
  [
    "./import/order.css",
    "@import url(http://example.com/style.css);",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/order-2.css",
    ".order-2 {
  color: red;
}
",
    "screen and (min-width: 2000px)",
  ],
  [
    "./import/order.css",
    "@import url(http://example.com/style.css);",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/order-3-1.css",
    ".order-3-1 {
  color: white;
}
",
    "screen and (orientation:landscape)",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/order-3.css",
    ".order-3 {
  color: red;
}
",
    "",
  ],
  [
    "./import/order.css",
    "@import url(http://example.com/style.css);",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/order-4-1.css",
    "@media (min-width: 1000px) {.order-4-1 {
  color: red;
}
}",
    "screen",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/order-4-2-1.css",
    "@media (min-width: 2000px) {.order-4-2-1 {
  color: red;
}
}",
    "screen",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/order-4-2-2.css",
    "@media (min-width: 2000px) {@media (orientation:landscape) {.order-4-2-2 {
  color: red;
}
}}",
    "screen",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/order-4-2.css",
    "@media (min-width: 2000px) {.order-4-2 {
  color: red;
}
}",
    "screen",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/order-4.css",
    ".order-4 {
  color: red;
}
",
    "screen",
  ],
  [
    "./import/order.css",
    "div {
  width: 100%;
  height: 200px;
}
",
    "",
  ],
]
`;

exports[`"import" option should keep original order: warnings 1`] = `[]`;

exports[`"import" option should resolve "file" protocol: errors 1`] = `[]`;

exports[`"import" option should resolve "file" protocol: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./test.css";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should resolve "file" protocol: result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/test.css",
    ".test {
  a: a;
}
",
    "",
  ],
  [
    "./import/import-file-protocol.css",
    "",
    "",
  ],
]
`;

exports[`"import" option should resolve "file" protocol: warnings 1`] = `[]`;

exports[`"import" option should resolve absolute path: errors 1`] = `[]`;

exports[`"import" option should resolve absolute path: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./test.css";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should resolve absolute path: result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/test.css",
    ".test {
  a: a;
}
",
    "",
  ],
  [
    "./import/import-absolute.css",
    "",
    "",
  ],
]
`;

exports[`"import" option should resolve absolute path: warnings 1`] = `[]`;

exports[`"import" option should resolve server-relative url relative rootContext: errors 1`] = `[]`;

exports[`"import" option should resolve server-relative url relative rootContext: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./test.css";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".class {\\r\\n  a: b c d;\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should resolve server-relative url relative rootContext: result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/test.css",
    ".test {
  a: a;
}
",
    "",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/test.css",
    ".test {
  a: a;
}
",
    "",
  ],
  [
    "./import/import-server-relative-url.css",
    ".class {
  a: b c d;
}
",
    "",
  ],
]
`;

exports[`"import" option should resolve server-relative url relative rootContext: warnings 1`] = `[]`;

exports[`"import" option should respect conditionNames: errors 1`] = `[]`;

exports[`"import" option should respect conditionNames: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./node_modules/package-with-exports/style.css";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should respect conditionNames: result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/node_modules/package-with-exports/style.css",
    ".load-me {
  color: red;
}
",
    "",
  ],
  [
    "./import/import-conditionNames.css",
    "
",
    "",
  ],
]
`;

exports[`"import" option should respect conditionNames: warnings 1`] = `[]`;

exports[`"import" option should respect style field in package.json: errors 1`] = `[]`;

exports[`"import" option should respect style field in package.json: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../../../src/runtime/api.js";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".test {\\r\\n  color: coral;\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should respect style field in package.json: result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/node_modules/issue-683-package/test.css",
    ".test {
  color: coral;
}
",
    "",
  ],
  [
    "./import/issue-683.css",
    "
",
    "",
  ],
]
`;

exports[`"import" option should respect style field in package.json: warnings 1`] = `[]`;

exports[`"import" option should throw an error on unresolved import: errors 1`] = `
[
  "ModuleBuildError: Module build failed (from \`replaced original path\`):
Error: Can't resolve 'unresolved-file.css' in '/test/fixtures/import'",
]
`;

exports[`"import" option should throw an error on unresolved import: warnings 1`] = `[]`;

exports[`"import" option should work resolve order: local -> node_modules -> alias: errors 1`] = `[]`;

exports[`"import" option should work resolve order: local -> node_modules -> alias: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./test.css";
import ___CSS_LOADER_AT_RULE_IMPORT_1___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./issue-683.css";
import ___CSS_LOADER_AT_RULE_IMPORT_2___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./node_modules/package/tilde.css";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_2___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work resolve order: local -> node_modules -> alias: result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/test.css",
    ".test {
  a: a;
}
",
    "",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/node_modules/issue-683-package/test.css",
    ".test {
  color: coral;
}
",
    "",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/issue-683.css",
    "
",
    "",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/node_modules/package/tilde.css",
    ".tilde {
  color: yellow;
}
",
    "",
  ],
  [
    "./import/import-order.css",
    "
",
    "",
  ],
]
`;

exports[`"import" option should work resolve order: local -> node_modules -> alias: warnings 1`] = `[]`;

exports[`"import" option should work when 'import.loaders' not specified: errors 1`] = `[]`;

exports[`"import" option should work when 'import.loaders' not specified: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js!./imported.css";
import ___CSS_LOADER_AT_RULE_IMPORT_1___ from "-!../../../src/index.js!./other-imported.css";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".foo {\\r\\n  color: red;\\r\\n  color: rgba(0, 0, 255, 0.9);\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work when 'import.loaders' not specified: result 1`] = `
[
  [
    "../../src/index.js!./nested-import/imported.css",
    ".bar {
  color: blue;
  color: rgb(0 0 100% / 90%);
}
",
    "",
  ],
  [
    "../../src/index.js!./nested-import/other-imported.css",
    ".baz {
  color: green;
  color: rgb(0 0 100% / 90%);
}
",
    "",
  ],
  [
    "./nested-import/source.css",
    ".foo {
  color: red;
  color: rgba(0, 0, 255, 0.9);
}
",
    "",
  ],
]
`;

exports[`"import" option should work when 'import.loaders' not specified: warnings 1`] = `[]`;

exports[`"import" option should work when not specified and print correct output: module 1`] = `undefined`;

exports[`"import" option should work when not specified: module 1`] = `undefined`;

exports[`"import" option should work with 'false' aliases: errors 1`] = `[]`;

exports[`"import" option should work with 'false' aliases: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@import \\"/style.css\\";\\r\\n\\r\\n.class {\\r\\n    color: red;\\r\\n}", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work with 'false' aliases: result 1`] = `
[
  [
    "./import/false-alias.css",
    "@import "/style.css";

.class {
    color: red;
}",
    "",
  ],
]
`;

exports[`"import" option should work with 'false' aliases: warnings 1`] = `[]`;

exports[`"import" option should work with 'resolve.byDependency.css.extensions': errors 1`] = `[]`;

exports[`"import" option should work with 'resolve.byDependency.css.extensions': module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./extensions-imported.mycss";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "a {\\r\\n    color: red;\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work with 'resolve.byDependency.css.extensions': result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/extensions-imported.mycss",
    "div {
  color: red;
}
",
    "",
  ],
  [
    "./import/extensions.css",
    "a {
    color: red;
}
",
    "",
  ],
]
`;

exports[`"import" option should work with 'resolve.byDependency.css.extensions': warnings 1`] = `[]`;

exports[`"import" option should work with 'resolve.extensions': errors 1`] = `[]`;

exports[`"import" option should work with 'resolve.extensions': module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./extensions-imported.mycss";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "a {\\r\\n    color: red;\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work with 'resolve.extensions': result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./import/extensions-imported.mycss",
    "div {
  color: red;
}
",
    "",
  ],
  [
    "./import/extensions.css",
    "a {
    color: red;
}
",
    "",
  ],
]
`;

exports[`"import" option should work with 'resolve.extensions': warnings 1`] = `[]`;

exports[`"import" option should work with a "import.loaders" value equal to ""1"" ("postcss-loader" before): errors 1`] = `[]`;

exports[`"import" option should work with a "import.loaders" value equal to ""1"" ("postcss-loader" before): module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./imported.css";
import ___CSS_LOADER_AT_RULE_IMPORT_1___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./other-imported.css";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".foo {\\r\\n  color: red;\\r\\n  color: rgba(0, 0, 255, 0.9);\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work with a "import.loaders" value equal to ""1"" ("postcss-loader" before): result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./nested-import/imported.css",
    ".bar {
  color: blue;
  color: rgba(0, 0, 255, 0.9);
}
",
    "",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./nested-import/other-imported.css",
    ".baz {
  color: green;
  color: rgba(0, 0, 255, 0.9);
}
",
    "",
  ],
  [
    "./nested-import/source.css",
    ".foo {
  color: red;
  color: rgba(0, 0, 255, 0.9);
}
",
    "",
  ],
]
`;

exports[`"import" option should work with a "import.loaders" value equal to ""1"" ("postcss-loader" before): warnings 1`] = `[]`;

exports[`"import" option should work with a "import.loaders" value equal to "0" (\`postcss-loader\` before): errors 1`] = `[]`;

exports[`"import" option should work with a "import.loaders" value equal to "0" (\`postcss-loader\` before): module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./imported.css";
import ___CSS_LOADER_AT_RULE_IMPORT_1___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./other-imported.css";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".foo {\\r\\n  color: red;\\r\\n  color: rgba(0, 0, 255, 0.9);\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work with a "import.loaders" value equal to "0" (\`postcss-loader\` before): result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./nested-import/imported.css",
    ".bar {
  color: blue;
  color: rgb(0 0 100% / 90%);
}
",
    "",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./nested-import/other-imported.css",
    ".baz {
  color: green;
  color: rgb(0 0 100% / 90%);
}
",
    "",
  ],
  [
    "./nested-import/source.css",
    ".foo {
  color: red;
  color: rgba(0, 0, 255, 0.9);
}
",
    "",
  ],
]
`;

exports[`"import" option should work with a "import.loaders" value equal to "0" (\`postcss-loader\` before): warnings 1`] = `[]`;

exports[`"import" option should work with a "import.loaders" value equal to "1" ("postcss-loader" before): errors 1`] = `[]`;

exports[`"import" option should work with a "import.loaders" value equal to "1" ("postcss-loader" before): module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./imported.css";
import ___CSS_LOADER_AT_RULE_IMPORT_1___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./other-imported.css";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".foo {\\r\\n  color: red;\\r\\n  color: rgba(0, 0, 255, 0.9);\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work with a "import.loaders" value equal to "1" ("postcss-loader" before): result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./nested-import/imported.css",
    ".bar {
  color: blue;
  color: rgba(0, 0, 255, 0.9);
}
",
    "",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./nested-import/other-imported.css",
    ".baz {
  color: green;
  color: rgba(0, 0, 255, 0.9);
}
",
    "",
  ],
  [
    "./nested-import/source.css",
    ".foo {
  color: red;
  color: rgba(0, 0, 255, 0.9);
}
",
    "",
  ],
]
`;

exports[`"import" option should work with a "import.loaders" value equal to "1" ("postcss-loader" before): warnings 1`] = `[]`;

exports[`"import" option should work with a "import.loaders" value equal to "1" (no loaders before): errors 1`] = `[]`;

exports[`"import" option should work with a "import.loaders" value equal to "1" (no loaders before): module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./imported.css";
import ___CSS_LOADER_AT_RULE_IMPORT_1___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./other-imported.css";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".foo {\\r\\n  color: red;\\r\\n  color: rgb(0 0 100% / 90%);\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work with a "import.loaders" value equal to "1" (no loaders before): result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./nested-import/imported.css",
    ".bar {
  color: blue;
  color: rgb(0 0 100% / 90%);
}
",
    "",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./nested-import/other-imported.css",
    ".baz {
  color: green;
  color: rgb(0 0 100% / 90%);
}
",
    "",
  ],
  [
    "./nested-import/source.css",
    ".foo {
  color: red;
  color: rgb(0 0 100% / 90%);
}
",
    "",
  ],
]
`;

exports[`"import" option should work with a "import.loaders" value equal to "1" (no loaders before): warnings 1`] = `[]`;

exports[`"import" option should work with a "import.loaders" value equal to "2" ("postcss-loader" before): errors 1`] = `[]`;

exports[`"import" option should work with a "import.loaders" value equal to "2" ("postcss-loader" before): module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./imported.css";
import ___CSS_LOADER_AT_RULE_IMPORT_1___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!../../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./other-imported.css";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_1___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, ".foo {\\r\\n  color: red;\\r\\n  color: rgba(0, 0, 255, 0.9);\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work with a "import.loaders" value equal to "2" ("postcss-loader" before): result 1`] = `
[
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./nested-import/imported.css",
    ".bar {
  color: blue;
  color: rgba(0, 0, 255, 0.9);
}
",
    "",
  ],
  [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!../../node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[0].use[1]!./nested-import/other-imported.css",
    ".baz {
  color: green;
  color: rgba(0, 0, 255, 0.9);
}
",
    "",
  ],
  [
    "./nested-import/source.css",
    ".foo {
  color: red;
  color: rgba(0, 0, 255, 0.9);
}
",
    "",
  ],
]
`;

exports[`"import" option should work with a "import.loaders" value equal to "2" ("postcss-loader" before): warnings 1`] = `[]`;

exports[`"import" option should work with a value equal to "false": errors 1`] = `[]`;

exports[`"import" option should work with a value equal to "false": module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_GET_URL_IMPORT___ from "../../../src/runtime/getUrl.js";
var ___CSS_LOADER_URL_IMPORT_0___ = new URL("./img.png", import.meta.url);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
var ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "@import url(test.css);\\r\\n@import url('test.css');\\r\\n@import url(\\"test.css\\");\\r\\n@IMPORT url(test.css);\\r\\n@import URL(test.css);\\r\\n@import url(test.css );\\r\\n@import url( test.css);\\r\\n@import url( test.css );\\r\\n@import url(\\r\\n  test.css\\r\\n);\\r\\n@import url();\\r\\n@import url('');\\r\\n@import url(\\"\\");\\r\\n@import \\"test.css\\";\\r\\n@import 'test.css';\\r\\n@import '';\\r\\n@import \\"\\";\\r\\n@import \\"   \\";\\r\\n@import \\"\\r\\n\\";\\r\\n@import url();\\r\\n@import url('');\\r\\n@import url(\\"\\");\\r\\n@import url(test.css) screen and (orientation:landscape);\\r\\n@import url(test.css) SCREEN AND (ORIENTATION: LANDSCAPE);\\r\\n@import url(test.css)screen and (orientation:landscape);\\r\\n@import url(test.css)  screen and (orientation:landscape);\\r\\n@import url(test-media.css) screen and (orientation:landscape);\\r\\n@import url(test-other.css) (min-width: 100px);\\r\\n@import url(http://example.com/style.css);\\r\\n@import url(http://example.com/style.css);\\r\\n@import url(http://example.com/style.css#hash);\\r\\n@import url(http://example.com/style.css?#hash);\\r\\n@import url(http://example.com/style.css?foo=bar#hash);\\r\\n@import url(http://example.com/other-style.css) screen and (orientation:landscape);\\r\\n@import url(http://example.com/other-style.css) screen and (orientation:landscape);\\r\\n@import url(\\"//example.com/style.css\\");\\r\\n@import url(~package/test.css);\\r\\n@import ;\\r\\n@import foo-bar;\\r\\n@import-normalize;\\r\\n@import url('http://') :root {}\\r\\n@import url('query.css?foo=1&bar=1');\\r\\n@import url('other-query.css?foo=1&bar=1#hash');\\r\\n@import url('other-query.css?foo=1&bar=1#hash') screen and (orientation:landscape);\\r\\n@import url('https://fonts.googleapis.com/css?family=Roboto');\\r\\n@import url('https://fonts.googleapis.com/css?family=Noto+Sans+TC');\\r\\n@import url('https://fonts.googleapis.com/css?family=Noto+Sans+TC|Roboto');\\r\\n\\r\\n.class {\\r\\n  a: b c d;\\r\\n}\\r\\n\\r\\n.foo {\\r\\n  @import 'path.css';\\r\\n}\\r\\n\\r\\n@import url('./relative.css');\\r\\n@import url('../import/top-relative.css');\\r\\n@import url(~package/tilde.css);\\r\\n@import url(~aliasesImport/alias.css);\\r\\n@import url('./url.css');\\r\\n\\r\\n.background {\\r\\n  background: url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");\\r\\n}\\r\\n\\r\\n@import url(./test.css);\\r\\n\\r\\n@import './te\\\\\\r\\nst.css';\\r\\n@import './te\\\\\\r\\n\\\\\\r\\n\\\\\\r\\nst.css';\\r\\n@import url('./te\\\\\\r\\nst.css');\\r\\n@import url('./te\\\\\\r\\n\\\\\\r\\n\\\\\\r\\nst.css');\\r\\n\\r\\n@import \\"./te'st.css\\";\\r\\n@import url(\\"./te'st.css\\");\\r\\n@import './te\\\\'st.css';\\r\\n@import url('./te\\\\'st.css');\\r\\n@import './test test.css';\\r\\n@import url('./test test.css');\\r\\n@import './test\\\\ test.css';\\r\\n@import url('./test\\\\ test.css');\\r\\n@import './test%20test.css';\\r\\n@import url('./test%20test.css');\\r\\n@import './\\\\74\\\\65\\\\73\\\\74.css';\\r\\n@import url('./\\\\74\\\\65\\\\73\\\\74.css');\\r\\n@import './t\\\\65\\\\73\\\\74.css';\\r\\n@import url('./t\\\\65\\\\73\\\\74.css');\\r\\n@import url(./test\\\\ test.css);\\r\\n@import url(./t\\\\65st%20test.css);\\r\\n@import url('./t\\\\65st%20test.css');\\r\\n@import url(\\"./t\\\\65st%20test.css\\");\\r\\n@import \\"./t\\\\65st%20test.css\\";\\r\\n@import './t\\\\65st%20test.css';\\r\\n@import url(                 test.css                      );\\r\\n@import nourl(test.css);\\r\\n@import '\\\\\\r\\n\\\\\\r\\n\\\\\\r\\n';\\r\\n@import url('!!../../helpers/string-loader.js?esModule=false!~package/tilde.css');\\r\\n@import url(test.css?foo=bar);\\r\\n@import url(test.css?foo=bar#hash);\\r\\n@import url(test.css?#hash);\\r\\n@import \\"test.css\\" supports(display: flex);\\r\\n@import \\"test.css\\" supports(display: flex) screen and (orientation:landscape);\\r\\n\\r\\n/* Should be one import and two css modules */\\r\\n\\r\\n@import url('something.css');\\r\\n@import url('something.css');\\r\\n\\r\\n/* Should be one import and two css modules */\\r\\n\\r\\n@import url('something.css?foo=bar');\\r\\n@import url('something.css?foo=bar');\\r\\n\\r\\n/* Should be one import and two css modules */\\r\\n\\r\\n@import url('something.css?foo=bar#hash');\\r\\n@import url('something.css?foo=bar#hash');\\r\\n\\r\\n/* Should be two import and two css modules */\\r\\n\\r\\n@import url('something.css?foo=bar');\\r\\n@import url('something.css?bar=foo');\\r\\n\\r\\n/* Should be two import and two css modules */\\r\\n\\r\\n@import url('something.css?foo=bar#one');\\r\\n@import url('something.css?foo=bar#two');\\r\\n\\r\\n/* Should be two import and two css modules */\\r\\n\\r\\n@import url('something.css?foo=1&bar=2');\\r\\n@import url('something.css?foo=2&bar=1');\\r\\n\\r\\n@import \\"   ./test.css   \\";\\r\\n@import url('   ./test.css   ');\\r\\n@import url(   ./test.css   );\\r\\n\\r\\n@import \\"./my.scss\\";\\r\\n\\r\\n@import url('   https://fonts.googleapis.com/css?family=Roboto   ');\\r\\n@import url('!!../../helpers/string-loader.js?esModule=false!');\\r\\n@import url('   !!../../helpers/string-loader.js?esModule=false!~package/tilde.css   ');\\r\\n@import url(data:text/css;charset=utf-8,a%20%7B%0D%0A%20%20color%3A%20red%3B%0D%0A%7D);\\r\\n\\r\\n/* Prefer relative */\\r\\n@import url(package/first.css);\\r\\n@import url(package/second.css);\\r\\n\\r\\n@import url(\\"./test.css\\") supports();\\r\\n@import url(\\"./test.css\\") supports(unknown);\\r\\n@import url(\\"./test.css\\") supports(display: flex);\\r\\n@import url(\\"./test.css\\") supports(display: flex !important);\\r\\n@import url(\\"./test.css\\") supports(display: flex) screen and (min-width: 400px);\\r\\n@import url(\\"./test.css\\") layer;\\r\\n@import url(\\"./test.css\\") layer(default);\\r\\n@import url(\\"./test.css\\") layer(default) supports(display: flex) screen and (min-width: 400px);\\r\\n@import url(\\"./test.css\\") layer supports(display: flex) screen and (min-width: 400px);\\r\\n@import url(\\"./test.css\\") layer() supports(display: flex) screen and (min-width: 400px);\\r\\n@import url(\\"./test.css\\") layer();\\r\\n@import url(\\"http://example.com/style.css\\") supports(display: flex) screen and (min-width: 400px);\\r\\n@import url(\\"./test.css\\")layer(default)supports(display: flex)screen and (min-width:400px);\\r\\n@import url(\\"./test.css\\")screen and (min-width: 400px);\\r\\n@import url(\\"./test.css\\")     layer(     default     )     supports(     display     :     flex     )     screen     and     (     min-width     :     400px     );\\r\\n@import url(\\"./test.css\\") LAYER(DEFAULT) SUPPORTS(DISPLAY: FLEX) SCREEN AND (MIN-WIDTH: 400PX);\\r\\n@import url(\\"./test.css\\") /* Comment */ layer(/* Comment */default/* Comment */) /* Comment */ supports(/* Comment */display/* Comment */:/* Comment */ flex/* Comment */)/* Comment */ screen/* Comment */ and/* Comment */ (/* Comment */min-width/* Comment */: /* Comment */400px/* Comment */);\\r\\n@import url(test.css) /* Comment */;\\r\\n@import /* Comment */ url(test.css) /* Comment */;\\r\\n@import url(test.css) /* Comment */ print and (orientation:landscape);\\r\\n@import /* Comment */ url(test.css) /* Comment */ print and (orientation:landscape);\\r\\n\\r\\n@import url(\\"./import-with-media.css\\") screen and (min-width: 400px);\\r\\n@import url(\\"./deep-import-with-media.css\\") (prefers-color-scheme: dark);\\r\\n@import url(\\"./import-with-supports.css\\") supports(display: flex);\\r\\n@import url(\\"./import-with-supports.css\\") supports(((display: flex)));\\r\\n@import url(\\"./deep-import-with-supports.css\\") supports(display: flex);\\r\\n@import url('./test.css') supports(display: grid);\\r\\n@import url(\\"./import-with-supports-and-media.css\\") supports(display: flex) screen and (min-width: 400px);\\r\\n@import url(\\"./import-deep-with-supports-and-media.css\\") supports(display: flex) screen and (min-width: 400px);\\r\\n@import url(\\"./test.css\\") layer(framework);\\r\\n@import url(\\"./import-with-layer.css\\") layer(framework);\\r\\n@import url(\\"./deep-import-with-layer.css\\") layer(framework);\\r\\n@import url(\\"./import-multiple-with-layer.css\\") layer(default);\\r\\n@import url(\\"./import-with-layer-unnamed.css\\") layer(default);\\r\\n@import url(\\"./import-unnamed-layer.css\\") layer(base);\\r\\n@import url(\\"./import-multiple-unnamed-layer.css\\") layer(base);\\r\\n@import url(\\"./import-with-layer-and-supports.css\\") layer(default) supports(display: flex);\\r\\n@import url(\\"./import-with-layer-and-supports-and-media.css\\") layer(default) supports(display: flex) screen and (min-width: 400px);\\r\\n@import url(\\"./deep-layer.css\\");\\r\\n\\r\\n@import url(\\"./test.css\\") unknown(default) unknown(display: flex) unknown;\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work with a value equal to "false": result 1`] = `
"@import url(test.css);
@import url('test.css');
@import url("test.css");
@IMPORT url(test.css);
@import URL(test.css);
@import url(test.css );
@import url( test.css);
@import url( test.css );
@import url(
  test.css
);
@import url();
@import url('');
@import url("");
@import "test.css";
@import 'test.css';
@import '';
@import "";
@import "   ";
@import "
";
@import url();
@import url('');
@import url("");
@import url(test.css) screen and (orientation:landscape);
@import url(test.css) SCREEN AND (ORIENTATION: LANDSCAPE);
@import url(test.css)screen and (orientation:landscape);
@import url(test.css)  screen and (orientation:landscape);
@import url(test-media.css) screen and (orientation:landscape);
@import url(test-other.css) (min-width: 100px);
@import url(http://example.com/style.css);
@import url(http://example.com/style.css);
@import url(http://example.com/style.css#hash);
@import url(http://example.com/style.css?#hash);
@import url(http://example.com/style.css?foo=bar#hash);
@import url(http://example.com/other-style.css) screen and (orientation:landscape);
@import url(http://example.com/other-style.css) screen and (orientation:landscape);
@import url("//example.com/style.css");
@import url(~package/test.css);
@import ;
@import foo-bar;
@import-normalize;
@import url('http://') :root {}
@import url('query.css?foo=1&bar=1');
@import url('other-query.css?foo=1&bar=1#hash');
@import url('other-query.css?foo=1&bar=1#hash') screen and (orientation:landscape);
@import url('https://fonts.googleapis.com/css?family=Roboto');
@import url('https://fonts.googleapis.com/css?family=Noto+Sans+TC');
@import url('https://fonts.googleapis.com/css?family=Noto+Sans+TC|Roboto');

.class {
  a: b c d;
}

.foo {
  @import 'path.css';
}

@import url('./relative.css');
@import url('../import/top-relative.css');
@import url(~package/tilde.css);
@import url(~aliasesImport/alias.css);
@import url('./url.css');

.background {
  background: url(replaced_file_protocol_/webpack/public/path/img.png);
}

@import url(./test.css);

@import './te\\
st.css';
@import './te\\
\\
\\
st.css';
@import url('./te\\
st.css');
@import url('./te\\
\\
\\
st.css');

@import "./te'st.css";
@import url("./te'st.css");
@import './te\\'st.css';
@import url('./te\\'st.css');
@import './test test.css';
@import url('./test test.css');
@import './test\\ test.css';
@import url('./test\\ test.css');
@import './test%20test.css';
@import url('./test%20test.css');
@import './\\74\\65\\73\\74.css';
@import url('./\\74\\65\\73\\74.css');
@import './t\\65\\73\\74.css';
@import url('./t\\65\\73\\74.css');
@import url(./test\\ test.css);
@import url(./t\\65st%20test.css);
@import url('./t\\65st%20test.css');
@import url("./t\\65st%20test.css");
@import "./t\\65st%20test.css";
@import './t\\65st%20test.css';
@import url(                 test.css                      );
@import nourl(test.css);
@import '\\
\\
\\
';
@import url('!!../../helpers/string-loader.js?esModule=false!~package/tilde.css');
@import url(test.css?foo=bar);
@import url(test.css?foo=bar#hash);
@import url(test.css?#hash);
@import "test.css" supports(display: flex);
@import "test.css" supports(display: flex) screen and (orientation:landscape);

/* Should be one import and two css modules */

@import url('something.css');
@import url('something.css');

/* Should be one import and two css modules */

@import url('something.css?foo=bar');
@import url('something.css?foo=bar');

/* Should be one import and two css modules */

@import url('something.css?foo=bar#hash');
@import url('something.css?foo=bar#hash');

/* Should be two import and two css modules */

@import url('something.css?foo=bar');
@import url('something.css?bar=foo');

/* Should be two import and two css modules */

@import url('something.css?foo=bar#one');
@import url('something.css?foo=bar#two');

/* Should be two import and two css modules */

@import url('something.css?foo=1&bar=2');
@import url('something.css?foo=2&bar=1');

@import "   ./test.css   ";
@import url('   ./test.css   ');
@import url(   ./test.css   );

@import "./my.scss";

@import url('   https://fonts.googleapis.com/css?family=Roboto   ');
@import url('!!../../helpers/string-loader.js?esModule=false!');
@import url('   !!../../helpers/string-loader.js?esModule=false!~package/tilde.css   ');
@import url(data:text/css;charset=utf-8,a%20%7B%0D%0A%20%20color%3A%20red%3B%0D%0A%7D);

/* Prefer relative */
@import url(package/first.css);
@import url(package/second.css);

@import url("./test.css") supports();
@import url("./test.css") supports(unknown);
@import url("./test.css") supports(display: flex);
@import url("./test.css") supports(display: flex !important);
@import url("./test.css") supports(display: flex) screen and (min-width: 400px);
@import url("./test.css") layer;
@import url("./test.css") layer(default);
@import url("./test.css") layer(default) supports(display: flex) screen and (min-width: 400px);
@import url("./test.css") layer supports(display: flex) screen and (min-width: 400px);
@import url("./test.css") layer() supports(display: flex) screen and (min-width: 400px);
@import url("./test.css") layer();
@import url("http://example.com/style.css") supports(display: flex) screen and (min-width: 400px);
@import url("./test.css")layer(default)supports(display: flex)screen and (min-width:400px);
@import url("./test.css")screen and (min-width: 400px);
@import url("./test.css")     layer(     default     )     supports(     display     :     flex     )     screen     and     (     min-width     :     400px     );
@import url("./test.css") LAYER(DEFAULT) SUPPORTS(DISPLAY: FLEX) SCREEN AND (MIN-WIDTH: 400PX);
@import url("./test.css") /* Comment */ layer(/* Comment */default/* Comment */) /* Comment */ supports(/* Comment */display/* Comment */:/* Comment */ flex/* Comment */)/* Comment */ screen/* Comment */ and/* Comment */ (/* Comment */min-width/* Comment */: /* Comment */400px/* Comment */);
@import url(test.css) /* Comment */;
@import /* Comment */ url(test.css) /* Comment */;
@import url(test.css) /* Comment */ print and (orientation:landscape);
@import /* Comment */ url(test.css) /* Comment */ print and (orientation:landscape);

@import url("./import-with-media.css") screen and (min-width: 400px);
@import url("./deep-import-with-media.css") (prefers-color-scheme: dark);
@import url("./import-with-supports.css") supports(display: flex);
@import url("./import-with-supports.css") supports(((display: flex)));
@import url("./deep-import-with-supports.css") supports(display: flex);
@import url('./test.css') supports(display: grid);
@import url("./import-with-supports-and-media.css") supports(display: flex) screen and (min-width: 400px);
@import url("./import-deep-with-supports-and-media.css") supports(display: flex) screen and (min-width: 400px);
@import url("./test.css") layer(framework);
@import url("./import-with-layer.css") layer(framework);
@import url("./deep-import-with-layer.css") layer(framework);
@import url("./import-multiple-with-layer.css") layer(default);
@import url("./import-with-layer-unnamed.css") layer(default);
@import url("./import-unnamed-layer.css") layer(base);
@import url("./import-multiple-unnamed-layer.css") layer(base);
@import url("./import-with-layer-and-supports.css") layer(default) supports(display: flex);
@import url("./import-with-layer-and-supports-and-media.css") layer(default) supports(display: flex) screen and (min-width: 400px);
@import url("./deep-layer.css");

@import url("./test.css") unknown(default) unknown(display: flex) unknown;
"
`;

exports[`"import" option should work with a value equal to "false": warnings 1`] = `[]`;

exports[`"import" option should work with a value equal to "true": module 1`] = `undefined`;

exports[`"import" option should work with absolute URLs: errors 1`] = `[]`;

exports[`"import" option should work with absolute URLs: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_GET_URL_IMPORT___ from "../../../src/runtime/getUrl.js";
var ___CSS_LOADER_URL_IMPORT_0___ = new URL("https://raw.githubusercontent.com/webpack-contrib/css-loader/master/test/fixtures/url/img.png", import.meta.url);
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.push([module.id, "@import url(https://raw.githubusercontent.com/webpack-contrib/css-loader/master/test/fixtures/url/imported.css);"]);
var ___CSS_LOADER_URL_REPLACEMENT_0___ = ___CSS_LOADER_GET_URL_IMPORT___(___CSS_LOADER_URL_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "a {\\r\\n    background: url(" + ___CSS_LOADER_URL_REPLACEMENT_0___ + ");\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work with absolute URLs: result 1`] = `
[
  [
    "./import/absolute-url.css",
    "@import url(https://raw.githubusercontent.com/webpack-contrib/css-loader/master/test/fixtures/url/imported.css);",
  ],
  [
    "./import/absolute-url.css",
    "a {
    background: url(replaced_file_protocol_/webpack/public/path/img.png);
}
",
    "",
  ],
]
`;

exports[`"import" option should work with absolute URLs: warnings 1`] = `[]`;

exports[`"import" option should work with circular \`@import\`: errors 1`] = `[]`;

exports[`"import" option should work with circular \`@import\`: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from "-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./relative.css";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "/*\\r\\n  // TODO fixed nested circular \`@import\`\\r\\n  @import url(circular-nested.css);\\r\\n*/\\r\\n\\r\\na {\\r\\n    color: red;\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work with circular \`@import\`: result 1`] = `
".relative {
  color: red;
}
/*
  // TODO fixed nested circular \`@import\`
  @import url(circular-nested.css);
*/

a {
    color: red;
}
"
`;

exports[`"import" option should work with circular \`@import\`: warnings 1`] = `[]`;

exports[`"import" option should work with data URI: errors 1`] = `[]`;

exports[`"import" option should work with data URI: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from "../../../src/runtime/noSourceMaps.js";
import ___CSS_LOADER_API_IMPORT___ from "../../../src/runtime/api.js";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.push([module.id, "@import url(data:text/css;charset=utf-8;base64,YSB7DQogIGNvbG9yOiByZWQ7DQp9);"]);
// Module
___CSS_LOADER_EXPORT___.push([module.id, "a {\\r\\n    display: block;\\r\\n    width: 100px;\\r\\n}\\r\\n", ""]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"import" option should work with data URI: result 1`] = `
[
  [
    "./import/data-uri.css",
    "@import url(data:text/css;charset=utf-8;base64,YSB7DQogIGNvbG9yOiByZWQ7DQp9);",
  ],
  [
    "./import/data-uri.css",
    "a {
    display: block;
    width: 100px;
}
",
    "",
  ],
]
`;

exports[`"import" option should work with data URI: warnings 1`] = `[]`;

exports[`"import" option should work with import.filter: module 1`] = `undefined`;
