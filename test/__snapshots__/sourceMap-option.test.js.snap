// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`"sourceMap" option should generate source maps and do not change "[contenthash]" on different platform: errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps and do not change "[contenthash]" on different platform: module 1`] = `
"// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/sourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??ruleSet[1].rules[0].rules[0]!./nested/nested.css\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"webpack://./test/fixtures/source-map/basic.css\\"],\\"names\\":[],\\"mappings\\":\\"AAEA;EACE,UAAU;AACZ\\",\\"sourcesContent\\":[\\"@import \\\\\\"./nested/nested.css\\\\\\";\\\\n\\\\n.class {\\\\n  color: red;\\\\n}\\\\n\\"],\\"sourceRoot\\":\\"\\"}]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should generate source maps and do not change "[contenthash]" on different platform: result 1`] = `
Array [
  Array [
    "./src/index.js??ruleSet[1].rules[0].rules[0]!./test/fixtures/source-map/nested/nested.css",
    ".nested {
  color: blue;
}
",
    "",
    Object {
      "mappings": "AAAA;EACE,WAAW;AACb",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./test/fixtures/source-map/nested/nested.css",
      ],
      "sourcesContent": Array [
        ".nested {
  color: blue;
}
",
      ],
      "version": 3,
    },
  ],
  Array [
    "./test/fixtures/source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
    Object {
      "mappings": "AAEA;EACE,UAAU;AACZ",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./test/fixtures/source-map/basic.css",
      ],
      "sourcesContent": Array [
        "@import \\"./nested/nested.css\\";

.class {
  color: red;
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option should generate source maps and do not change "[contenthash]" on different platform: warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps and respect 'nosources' value: errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps and respect 'nosources' value: module 1`] = `
"// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/sourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./nested/nested.css\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"webpack://./source-map/basic.css\\"],\\"names\\":[],\\"mappings\\":\\"AAEA;EACE,UAAU;AACZ\\",\\"sourceRoot\\":\\"\\"}]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should generate source maps and respect 'nosources' value: result 1`] = `
Array [
  Array [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./source-map/nested/nested.css",
    ".nested {
  color: blue;
}
",
    "",
    Object {
      "mappings": "AAAA;EACE,WAAW;AACb",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/nested/nested.css",
      ],
      "version": 3,
    },
  ],
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
    Object {
      "mappings": "AAEA;EACE,UAAU;AACZ",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/basic.css",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option should generate source maps and respect 'nosources' value: warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when css was extracted and do not change "[contenthash]" on different platform: errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when css was extracted and do not change "[contenthash]" on different platform: extracted css 1`] = `
"/*!*****************************************************************************************************!*\\\\
  !*** css ./src/index.js??ruleSet[1].rules[0].rules[1]!./test/fixtures/source-map/nested/nested.css ***!
  \\\\*****************************************************************************************************/
.nested {
  color: blue;
}

/*!*********************************************************************************************!*\\\\
  !*** css ./src/index.js??ruleSet[1].rules[0].rules[1]!./test/fixtures/source-map/basic.css ***!
  \\\\*********************************************************************************************/
.class {
  color: red;
}


/*# sourceMappingURL=main.xxxxxxxxxxxxxxxxxxxx.css.map*/"
`;

exports[`"sourceMap" option should generate source maps when css was extracted and do not change "[contenthash]" on different platform: source map 1`] = `
Object {
  "file": "main.xxxxxxxxxxxxxxxxxxxx.css",
  "mappings": ";;;AAAA;EACE,WAAW;AACb;;;;;ACAA;EACE,UAAU;AACZ",
  "names": Array [],
  "sourceRoot": "",
  "sources": Array [
    "webpack:///./test/fixtures/source-map/nested/nested.css",
    "webpack:///./test/fixtures/source-map/basic.css",
  ],
  "sourcesContent": Array [
    ".nested {
  color: blue;
}
",
    "@import \\"./nested/nested.css\\";

.class {
  color: red;
}
",
  ],
  "version": 3,
}
`;

exports[`"sourceMap" option should generate source maps when css was extracted and do not change "[contenthash]" on different platform: warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'hidden-nosources-source-map': errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'hidden-nosources-source-map': extracted css 1`] = `
"/*!*******************************************************************************************!*\\\\
  !*** css ../../src/index.js??ruleSet[1].rules[0].rules[1]!./source-map/nested/nested.css ***!
  \\\\*******************************************************************************************/
.nested {
  color: blue;
}

/*!***********************************************************************************!*\\\\
  !*** css ../../src/index.js??ruleSet[1].rules[0].rules[1]!./source-map/basic.css ***!
  \\\\***********************************************************************************/
.class {
  color: red;
}

"
`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'hidden-nosources-source-map': source map 1`] = `
Object {
  "file": "main.css",
  "mappings": ";;;AAAA;EACE,WAAW;AACb;;;;;ACAA;EACE,UAAU;AACZ",
  "names": Array [],
  "sourceRoot": "",
  "sources": Array [
    "webpack:///./source-map/nested/nested.css",
    "webpack:///./source-map/basic.css",
  ],
  "version": 3,
}
`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'hidden-nosources-source-map': warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'hidden-source-map': errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'hidden-source-map': extracted css 1`] = `
"/*!*******************************************************************************************!*\\\\
  !*** css ../../src/index.js??ruleSet[1].rules[0].rules[1]!./source-map/nested/nested.css ***!
  \\\\*******************************************************************************************/
.nested {
  color: blue;
}

/*!***********************************************************************************!*\\\\
  !*** css ../../src/index.js??ruleSet[1].rules[0].rules[1]!./source-map/basic.css ***!
  \\\\***********************************************************************************/
.class {
  color: red;
}

"
`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'hidden-source-map': source map 1`] = `
Object {
  "file": "main.css",
  "mappings": ";;;AAAA;EACE,WAAW;AACb;;;;;ACAA;EACE,UAAU;AACZ",
  "names": Array [],
  "sourceRoot": "",
  "sources": Array [
    "webpack:///./source-map/nested/nested.css",
    "webpack:///./source-map/basic.css",
  ],
  "sourcesContent": Array [
    ".nested {
  color: blue;
}
",
    "@import \\"./nested/nested.css\\";

.class {
  color: red;
}
",
  ],
  "version": 3,
}
`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'hidden-source-map': warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'nosources-source-map': errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'nosources-source-map': extracted css 1`] = `
"/*!*******************************************************************************************!*\\\\
  !*** css ../../src/index.js??ruleSet[1].rules[0].rules[1]!./source-map/nested/nested.css ***!
  \\\\*******************************************************************************************/
.nested {
  color: blue;
}

/*!***********************************************************************************!*\\\\
  !*** css ../../src/index.js??ruleSet[1].rules[0].rules[1]!./source-map/basic.css ***!
  \\\\***********************************************************************************/
.class {
  color: red;
}


/*# sourceMappingURL=main.css.map*/"
`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'nosources-source-map': source map 1`] = `
Object {
  "file": "main.css",
  "mappings": ";;;AAAA;EACE,WAAW;AACb;;;;;ACAA;EACE,UAAU;AACZ",
  "names": Array [],
  "sourceRoot": "",
  "sources": Array [
    "webpack:///./source-map/nested/nested.css",
    "webpack:///./source-map/basic.css",
  ],
  "version": 3,
}
`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'nosources-source-map': warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'source-map': errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'source-map': extracted css 1`] = `
"/*!*******************************************************************************************!*\\\\
  !*** css ../../src/index.js??ruleSet[1].rules[0].rules[1]!./source-map/nested/nested.css ***!
  \\\\*******************************************************************************************/
.nested {
  color: blue;
}

/*!***********************************************************************************!*\\\\
  !*** css ../../src/index.js??ruleSet[1].rules[0].rules[1]!./source-map/basic.css ***!
  \\\\***********************************************************************************/
.class {
  color: red;
}


/*# sourceMappingURL=main.css.map*/"
`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'source-map': source map 1`] = `
Object {
  "file": "main.css",
  "mappings": ";;;AAAA;EACE,WAAW;AACb;;;;;ACAA;EACE,UAAU;AACZ",
  "names": Array [],
  "sourceRoot": "",
  "sources": Array [
    "webpack:///./source-map/nested/nested.css",
    "webpack:///./source-map/basic.css",
  ],
  "sourcesContent": Array [
    ".nested {
  color: blue;
}
",
    "@import \\"./nested/nested.css\\";

.class {
  color: red;
}
",
  ],
  "version": 3,
}
`;

exports[`"sourceMap" option should generate source maps when css was extracted when the 'devtool' property is 'source-map': warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when css was extracted: errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when css was extracted: extracted css 1`] = `
"/*!*******************************************************************************************!*\\\\
  !*** css ../../src/index.js??ruleSet[1].rules[0].rules[1]!./source-map/nested/nested.css ***!
  \\\\*******************************************************************************************/
.nested {
  color: blue;
}

/*!***********************************************************************************!*\\\\
  !*** css ../../src/index.js??ruleSet[1].rules[0].rules[1]!./source-map/basic.css ***!
  \\\\***********************************************************************************/
.class {
  color: red;
}

"
`;

exports[`"sourceMap" option should generate source maps when css was extracted: warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader does not generate source maps: errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader does not generate source maps: module 1`] = `
"// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/sourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./nested/nested.css\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"webpack://./source-map/basic.css\\"],\\"names\\":[],\\"mappings\\":\\"AAEA;EACE,UAAU;AACZ\\",\\"sourcesContent\\":[\\"@import \\\\\\"./nested/nested.css\\\\\\";\\\\n\\\\n.class {\\\\n  color: red;\\\\n}\\\\n\\"],\\"sourceRoot\\":\\"\\"}]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should generate source maps when previous loader does not generate source maps: result 1`] = `
Array [
  Array [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./source-map/nested/nested.css",
    ".nested {
  color: blue;
}
",
    "",
    Object {
      "mappings": "AAAA;EACE,WAAW;AACb",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/nested/nested.css",
      ],
      "sourcesContent": Array [
        ".nested {
  color: blue;
}
",
      ],
      "version": 3,
    },
  ],
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
    Object {
      "mappings": "AAEA;EACE,UAAU;AACZ",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/basic.css",
      ],
      "sourcesContent": Array [
        "@import \\"./nested/nested.css\\";

.class {
  color: red;
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option should generate source maps when previous loader does not generate source maps: warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates different source in source maps: errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates different source in source maps: module 1`] = `
"// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/sourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./nested/nested.css\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"webpack://./source-map/basic-1.css\\"],\\"names\\":[],\\"mappings\\":\\"AAEA;EACE,UAAU;AACZ\\",\\"sourcesContent\\":[\\"@import \\\\\\"./nested/nested.css\\\\\\";\\\\n\\\\n.class {\\\\n  color: red;\\\\n}\\\\n\\"],\\"sourceRoot\\":\\"\\"}]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should generate source maps when previous loader generates different source in source maps: result 1`] = `
Array [
  Array [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./source-map/nested/nested.css",
    ".nested {
  color: blue;
}
",
    "",
    Object {
      "mappings": "AAAA;EACE,WAAW;AACb",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/nested/nested.css",
      ],
      "sourcesContent": Array [
        ".nested {
  color: blue;
}
",
      ],
      "version": 3,
    },
  ],
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
    Object {
      "mappings": "AAEA;EACE,UAAU;AACZ",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/basic-1.css",
      ],
      "sourcesContent": Array [
        "@import \\"./nested/nested.css\\";

.class {
  color: red;
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option should generate source maps when previous loader generates different source in source maps: warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("less-loader"): errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("less-loader"): module 1`] = `
"// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/sourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\"body {\\\\n  font: 100% Helvetica, sans-serif;\\\\n  color: #333;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"webpack://./source-map/base.less\\"],\\"names\\":[],\\"mappings\\":\\"AAGA;EACE,gCAAA;EACA,WAAA;AAFF\\",\\"sourcesContent\\":[\\"@font-stack:    Helvetica, sans-serif;\\\\n@primary-color: #333;\\\\n\\\\nbody {\\\\n  font: 100% @font-stack;\\\\n  color: @primary-color;\\\\n}\\\\n\\"],\\"sourceRoot\\":\\"\\"}]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("less-loader"): result 1`] = `
Array [
  Array [
    "./source-map/base.less",
    "body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}
",
    "",
    Object {
      "mappings": "AAGA;EACE,gCAAA;EACA,WAAA;AAFF",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/base.less",
      ],
      "sourcesContent": Array [
        "@font-stack:    Helvetica, sans-serif;
@primary-color: #333;

body {
  font: 100% @font-stack;
  color: @primary-color;
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("less-loader"): warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("postcss-loader"): errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("postcss-loader"): module 1`] = `
"// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/sourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./nested/nested.postcss.css\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\":root {\\\\n  --fontSize: 1rem;\\\\n  --mainColor: rgba(18,52,86,0.47059);\\\\n  --secondaryColor: rgba(102, 51, 153, 0.9);\\\\n}\\\\n\\\\n@supports (color: color(display-p3 0 0 0)){\\\\n:root {\\\\n  --secondaryColor: color(display-p3 0.37546 0.21105 0.57967 / 90%);\\\\n}\\\\n}\\\\n\\\\nhtml {\\\\n  overflow-x: hidden;\\\\n  overflow-y: auto;\\\\n  overflow: hidden auto;\\\\n}\\\\n\\\\n@media (max-width: 50rem) {\\\\n  body {\\\\n    color: rgba(18,52,86,0.47059);\\\\n    color: var(--mainColor);\\\\n    font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif;\\\\n    font-size: 1rem;\\\\n    font-size: var(--fontSize);\\\\n    line-height: calc(1rem * 1.5);\\\\n    line-height: calc(var(--fontSize) * 1.5);\\\\n    word-wrap: break-word;\\\\n    padding-left: calc(1rem / 2 + 1px);\\\\n    padding-right: calc(1rem / 2 + 1px);\\\\n    padding-left: calc(var(--fontSize) / 2 + 1px);\\\\n    padding-right: calc(var(--fontSize) / 2 + 1px);\\\\n  }\\\\n}\\\\n\\\\nh1,h2,h3,h4,h5,h6 {\\\\n  margin-top: 0;\\\\n  margin-bottom: 0;\\\\n}\\\\n\\\\na {\\\\n  color: rgba(0, 0, 255, 0.9);\\\\n}\\\\n\\\\na:hover {\\\\n   color: #639;\\\\n }\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"webpack://./source-map/basic.postcss.css\\"],\\"names\\":[],\\"mappings\\":\\"AAKA;EACE,gBAAgB;EAChB,mCAAsB;EACtB,yCAA4C;AAC9C;;AAJA;AAAA;EAGE,iEAA4C;AAC9C;AAAA;;AAEA;EACE,kBAAqB;EAArB,gBAAqB;EAArB,qBAAqB;AACvB;;AAEA;EACE;IACE,6BAAuB;IAAvB,uBAAuB;IACvB,iGAAsB;IACtB,eAA0B;IAA1B,0BAA0B;IAC1B,6BAAwC;IAAxC,wCAAwC;IACxC,qBAAyB;IACzB,kCAA+C;IAA/C,mCAA+C;IAA/C,6CAA+C;IAA/C,8CAA+C;EACjD;AACF;;AAEA;EACE,aAAe;EAAf,gBAAe;AACjB;;AAEA;EACE,2BAA0B;AAK5B;;AAHA;GACG,WAAoB;CACtB\\",\\"sourcesContent\\":[\\"@import \\\\\\"./nested/nested.postcss.css\\\\\\";\\\\n\\\\n@custom-media --viewport-medium (width <= 50rem);\\\\n@custom-selector :--heading h1, h2, h3, h4, h5, h6;\\\\n\\\\n:root {\\\\n  --fontSize: 1rem;\\\\n  --mainColor: #12345678;\\\\n  --secondaryColor: lab(32.5 38.5 -47.6 / 90%);\\\\n}\\\\n\\\\nhtml {\\\\n  overflow: hidden auto;\\\\n}\\\\n\\\\n@media (--viewport-medium) {\\\\n  body {\\\\n    color: var(--mainColor);\\\\n    font-family: system-ui;\\\\n    font-size: var(--fontSize);\\\\n    line-height: calc(var(--fontSize) * 1.5);\\\\n    overflow-wrap: break-word;\\\\n    padding-inline: calc(var(--fontSize) / 2 + 1px);\\\\n  }\\\\n}\\\\n\\\\n:--heading {\\\\n  margin-block: 0;\\\\n}\\\\n\\\\na {\\\\n  color: rgb(0 0 100% / 90%);\\\\n\\\\n&:hover {\\\\n   color: rebeccapurple;\\\\n }\\\\n}\\\\n\\"],\\"sourceRoot\\":\\"\\"}]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("postcss-loader"): result 1`] = `
Array [
  Array [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./source-map/nested/nested.postcss.css",
    ".nested {
  color: blue;
}
",
    "",
    Object {
      "mappings": "AAAA;EACE,WAAW;AACb",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/nested/nested.postcss.css",
      ],
      "sourcesContent": Array [
        ".nested {
  color: blue;
}
",
      ],
      "version": 3,
    },
  ],
  Array [
    "./source-map/basic.postcss.css",
    ":root {
  --fontSize: 1rem;
  --mainColor: rgba(18,52,86,0.47059);
  --secondaryColor: rgba(102, 51, 153, 0.9);
}

@supports (color: color(display-p3 0 0 0)){
:root {
  --secondaryColor: color(display-p3 0.37546 0.21105 0.57967 / 90%);
}
}

html {
  overflow-x: hidden;
  overflow-y: auto;
  overflow: hidden auto;
}

@media (max-width: 50rem) {
  body {
    color: rgba(18,52,86,0.47059);
    color: var(--mainColor);
    font-family: system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif;
    font-size: 1rem;
    font-size: var(--fontSize);
    line-height: calc(1rem * 1.5);
    line-height: calc(var(--fontSize) * 1.5);
    word-wrap: break-word;
    padding-left: calc(1rem / 2 + 1px);
    padding-right: calc(1rem / 2 + 1px);
    padding-left: calc(var(--fontSize) / 2 + 1px);
    padding-right: calc(var(--fontSize) / 2 + 1px);
  }
}

h1,h2,h3,h4,h5,h6 {
  margin-top: 0;
  margin-bottom: 0;
}

a {
  color: rgba(0, 0, 255, 0.9);
}

a:hover {
   color: #639;
 }
",
    "",
    Object {
      "mappings": "AAKA;EACE,gBAAgB;EAChB,mCAAsB;EACtB,yCAA4C;AAC9C;;AAJA;AAAA;EAGE,iEAA4C;AAC9C;AAAA;;AAEA;EACE,kBAAqB;EAArB,gBAAqB;EAArB,qBAAqB;AACvB;;AAEA;EACE;IACE,6BAAuB;IAAvB,uBAAuB;IACvB,iGAAsB;IACtB,eAA0B;IAA1B,0BAA0B;IAC1B,6BAAwC;IAAxC,wCAAwC;IACxC,qBAAyB;IACzB,kCAA+C;IAA/C,mCAA+C;IAA/C,6CAA+C;IAA/C,8CAA+C;EACjD;AACF;;AAEA;EACE,aAAe;EAAf,gBAAe;AACjB;;AAEA;EACE,2BAA0B;AAK5B;;AAHA;GACG,WAAoB;CACtB",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/basic.postcss.css",
      ],
      "sourcesContent": Array [
        "@import \\"./nested/nested.postcss.css\\";

@custom-media --viewport-medium (width <= 50rem);
@custom-selector :--heading h1, h2, h3, h4, h5, h6;

:root {
  --fontSize: 1rem;
  --mainColor: #12345678;
  --secondaryColor: lab(32.5 38.5 -47.6 / 90%);
}

html {
  overflow: hidden auto;
}

@media (--viewport-medium) {
  body {
    color: var(--mainColor);
    font-family: system-ui;
    font-size: var(--fontSize);
    line-height: calc(var(--fontSize) * 1.5);
    overflow-wrap: break-word;
    padding-inline: calc(var(--fontSize) / 2 + 1px);
  }
}

:--heading {
  margin-block: 0;
}

a {
  color: rgb(0 0 100% / 90%);

&:hover {
   color: rebeccapurple;
 }
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("postcss-loader"): warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("sass-loader"): errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("sass-loader"): module 1`] = `
"// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/sourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\"body {\\\\n  font: 100% Helvetica, sans-serif;\\\\n  color: #333;\\\\n}\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"webpack://./source-map/basic.scss\\"],\\"names\\":[],\\"mappings\\":\\"AAGA;EACE,gCAAA;EACA,WAJc;AAEhB\\",\\"sourcesContent\\":[\\"$font-stack:    Helvetica, sans-serif;\\\\n$primary-color: #333;\\\\n\\\\nbody {\\\\n  font: 100% $font-stack;\\\\n  color: $primary-color;\\\\n}\\\\n\\"],\\"sourceRoot\\":\\"\\"}]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("sass-loader"): result 1`] = `
Array [
  Array [
    "./source-map/basic.scss",
    "body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}",
    "",
    Object {
      "mappings": "AAGA;EACE,gCAAA;EACA,WAJc;AAEhB",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/basic.scss",
      ],
      "sourcesContent": Array [
        "$font-stack:    Helvetica, sans-serif;
$primary-color: #333;

body {
  font: 100% $font-stack;
  color: $primary-color;
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("sass-loader"): warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("stylus-loader"): errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("stylus-loader"): module 1`] = `
"// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/sourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\"body {\\\\n  font: 14px/1.5 Helvetica, arial, sans-serif;\\\\n}\\\\nbody #logo {\\\\n  border-radius: 5px;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"webpack://./source-map/base.styl\\"],\\"names\\":[],\\"mappings\\":\\"AAAA;EACE,2CAAwB;AAC1B;AAAE;EACE,kBAAe;AAEnB\\",\\"sourcesContent\\":[\\"body {\\\\n  font: 14px/1.5 Helvetica, arial, sans-serif;\\\\n  #logo {\\\\n    border-radius: 5px;\\\\n  }\\\\n}\\\\n\\"],\\"sourceRoot\\":\\"\\"}]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("stylus-loader"): result 1`] = `
Array [
  Array [
    "./source-map/base.styl",
    "body {
  font: 14px/1.5 Helvetica, arial, sans-serif;
}
body #logo {
  border-radius: 5px;
}
",
    "",
    Object {
      "mappings": "AAAA;EACE,2CAAwB;AAC1B;AAAE;EACE,kBAAe;AAEnB",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/base.styl",
      ],
      "sourcesContent": Array [
        "body {
  font: 14px/1.5 Helvetica, arial, sans-serif;
  #logo {
    border-radius: 5px;
  }
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps ("stylus-loader"): warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps with "sourceRoot": errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps with "sourceRoot": module 1`] = `
"// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/sourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./nested/nested.css\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"webpack://./source-map/basic.css\\"],\\"names\\":[],\\"mappings\\":\\"AAEA;EACE,UAAU;AACZ\\",\\"sourcesContent\\":[\\"@import \\\\\\"./nested/nested.css\\\\\\";\\\\n\\\\n.class {\\\\n  color: red;\\\\n}\\\\n\\"],\\"sourceRoot\\":\\"\\"}]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps with "sourceRoot": result 1`] = `
Array [
  Array [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./source-map/nested/nested.css",
    ".nested {
  color: blue;
}
",
    "",
    Object {
      "mappings": "AAAA;EACE,WAAW;AACb",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/nested/nested.css",
      ],
      "sourcesContent": Array [
        ".nested {
  color: blue;
}
",
      ],
      "version": 3,
    },
  ],
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
    Object {
      "mappings": "AAEA;EACE,UAAU;AACZ",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/basic.css",
      ],
      "sourcesContent": Array [
        "@import \\"./nested/nested.css\\";

.class {
  color: red;
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps with "sourceRoot": warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps without "sourceRoot": errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps without "sourceRoot": module 1`] = `
"// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/sourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./nested/nested.css\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"webpack://./source-map/basic.css\\"],\\"names\\":[],\\"mappings\\":\\"AAEA;EACE,UAAU;AACZ\\",\\"sourcesContent\\":[\\"@import \\\\\\"./nested/nested.css\\\\\\";\\\\n\\\\n.class {\\\\n  color: red;\\\\n}\\\\n\\"],\\"sourceRoot\\":\\"\\"}]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps without "sourceRoot": result 1`] = `
Array [
  Array [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./source-map/nested/nested.css",
    ".nested {
  color: blue;
}
",
    "",
    Object {
      "mappings": "AAAA;EACE,WAAW;AACb",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/nested/nested.css",
      ],
      "sourcesContent": Array [
        ".nested {
  color: blue;
}
",
      ],
      "version": 3,
    },
  ],
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
    Object {
      "mappings": "AAEA;EACE,UAAU;AACZ",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/basic.css",
      ],
      "sourcesContent": Array [
        "@import \\"./nested/nested.css\\";

.class {
  color: red;
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option should generate source maps when previous loader generates source maps without "sourceRoot": warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when the 'sourceMap' option is 'true' #2: errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when the 'sourceMap' option is 'true' #2: module 1`] = `
"// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/sourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".foo {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"webpack://./source-map/with-query.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA;EACE,UAAU;AACZ\\",\\"sourcesContent\\":[\\".foo {\\\\n  color: red;\\\\n}\\\\n\\"],\\"sourceRoot\\":\\"\\"}]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should generate source maps when the 'sourceMap' option is 'true' #2: result 1`] = `
Array [
  Array [
    "./source-map/with-query.css?url=false",
    ".foo {
  color: red;
}
",
    "",
    Object {
      "mappings": "AAAA;EACE,UAAU;AACZ",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/with-query.css",
      ],
      "sourcesContent": Array [
        ".foo {
  color: red;
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option should generate source maps when the 'sourceMap' option is 'true' #2: warnings 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when the 'sourceMap' option is 'true': errors 1`] = `Array []`;

exports[`"sourceMap" option should generate source maps when the 'sourceMap' option is 'true': module 1`] = `
"// Imports
import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/sourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./nested/nested.css\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"webpack://./source-map/basic.css\\"],\\"names\\":[],\\"mappings\\":\\"AAEA;EACE,UAAU;AACZ\\",\\"sourcesContent\\":[\\"@import \\\\\\"./nested/nested.css\\\\\\";\\\\n\\\\n.class {\\\\n  color: red;\\\\n}\\\\n\\"],\\"sourceRoot\\":\\"\\"}]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should generate source maps when the 'sourceMap' option is 'true': result 1`] = `
Array [
  Array [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./source-map/nested/nested.css",
    ".nested {
  color: blue;
}
",
    "",
    Object {
      "mappings": "AAAA;EACE,WAAW;AACb",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/nested/nested.css",
      ],
      "sourcesContent": Array [
        ".nested {
  color: blue;
}
",
      ],
      "version": 3,
    },
  ],
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
    Object {
      "mappings": "AAEA;EACE,UAAU;AACZ",
      "names": Array [],
      "sourceRoot": "",
      "sources": Array [
        "webpack://./source-map/basic.css",
      ],
      "sourcesContent": Array [
        "@import \\"./nested/nested.css\\";

.class {
  color: red;
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option should generate source maps when the 'sourceMap' option is 'true': warnings 1`] = `Array []`;

exports[`"sourceMap" option should not generate source maps by default when the 'devtool' option is false: errors 1`] = `Array []`;

exports[`"sourceMap" option should not generate source maps by default when the 'devtool' option is false: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/noSourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./nested/nested.css\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\"]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should not generate source maps by default when the 'devtool' option is false: result 1`] = `
Array [
  Array [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./source-map/nested/nested.css",
    ".nested {
  color: blue;
}
",
    "",
  ],
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
  ],
]
`;

exports[`"sourceMap" option should not generate source maps by default when the 'devtool' option is false: warnings 1`] = `Array []`;

exports[`"sourceMap" option should not generate source maps when 'false' value is used: errors 1`] = `Array []`;

exports[`"sourceMap" option should not generate source maps when 'false' value is used: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/noSourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./nested/nested.css\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\"]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should not generate source maps when 'false' value is used: result 1`] = `
Array [
  Array [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./source-map/nested/nested.css",
    ".nested {
  color: blue;
}
",
    "",
  ],
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
  ],
]
`;

exports[`"sourceMap" option should not generate source maps when 'false' value is used: warnings 1`] = `Array []`;

exports[`"sourceMap" option should not generate source maps when previous loader does not generate source maps: errors 1`] = `Array []`;

exports[`"sourceMap" option should not generate source maps when previous loader does not generate source maps: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/noSourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./nested/nested.css\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\"]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should not generate source maps when previous loader does not generate source maps: result 1`] = `
Array [
  Array [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./source-map/nested/nested.css",
    ".nested {
  color: blue;
}
",
    "",
  ],
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
  ],
]
`;

exports[`"sourceMap" option should not generate source maps when previous loader does not generate source maps: warnings 1`] = `Array []`;

exports[`"sourceMap" option should not generate source maps when previous loader generates source maps: errors 1`] = `Array []`;

exports[`"sourceMap" option should not generate source maps when previous loader generates source maps: module 1`] = `
"// Imports
import ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \\"../../../src/runtime/noSourceMaps.js\\";
import ___CSS_LOADER_API_IMPORT___ from \\"../../../src/runtime/api.js\\";
import ___CSS_LOADER_AT_RULE_IMPORT_0___ from \\"-!../../../src/index.js??ruleSet[1].rules[0].use[0]!./nested/nested.css\\";
var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);
___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);
// Module
___CSS_LOADER_EXPORT___.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\"]);
// Exports
export default ___CSS_LOADER_EXPORT___;
"
`;

exports[`"sourceMap" option should not generate source maps when previous loader generates source maps: result 1`] = `
Array [
  Array [
    "../../src/index.js??ruleSet[1].rules[0].use[0]!./source-map/nested/nested.css",
    ".nested {
  color: blue;
}
",
    "",
  ],
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
  ],
]
`;

exports[`"sourceMap" option should not generate source maps when previous loader generates source maps: warnings 1`] = `Array []`;
