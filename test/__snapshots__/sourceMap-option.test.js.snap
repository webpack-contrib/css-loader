// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`"sourceMap" option false should not generate source maps when source maps equal to "null" from an other loader: errors 1`] = `Array []`;

exports[`"sourceMap" option false should not generate source maps when source maps equal to "null" from an other loader: module 1`] = `
"// Imports
var ___CSS_LOADER_API_IMPORT___ = require(\\"../../../src/runtime/api.js\\");
exports = module.exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\"]);
"
`;

exports[`"sourceMap" option false should not generate source maps when source maps equal to "null" from an other loader: result 1`] = `
Array [
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
  ],
]
`;

exports[`"sourceMap" option false should not generate source maps when source maps equal to "null" from an other loader: warnings 1`] = `Array []`;

exports[`"sourceMap" option false should not generate source maps when source maps equal to "undefined" from an other loader: errors 1`] = `Array []`;

exports[`"sourceMap" option false should not generate source maps when source maps equal to "undefined" from an other loader: module 1`] = `
"// Imports
var ___CSS_LOADER_API_IMPORT___ = require(\\"../../../src/runtime/api.js\\");
exports = module.exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\"]);
"
`;

exports[`"sourceMap" option false should not generate source maps when source maps equal to "undefined" from an other loader: result 1`] = `
Array [
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
  ],
]
`;

exports[`"sourceMap" option false should not generate source maps when source maps equal to "undefined" from an other loader: warnings 1`] = `Array []`;

exports[`"sourceMap" option false should not generate source maps when source maps is valid from an other loader (\`postcss-loader\`): errors 1`] = `Array []`;

exports[`"sourceMap" option false should not generate source maps when source maps is valid from an other loader (\`postcss-loader\`): module 1`] = `
"// Imports
var ___CSS_LOADER_API_IMPORT___ = require(\\"../../../src/runtime/api.js\\");
exports = module.exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\"]);
"
`;

exports[`"sourceMap" option false should not generate source maps when source maps is valid from an other loader (\`postcss-loader\`): result 1`] = `
Array [
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
  ],
]
`;

exports[`"sourceMap" option false should not generate source maps when source maps is valid from an other loader (\`postcss-loader\`): warnings 1`] = `Array []`;

exports[`"sourceMap" option false should not generate source maps when source maps is valid from an other loader (\`sass-loader\`): errors 1`] = `Array []`;

exports[`"sourceMap" option false should not generate source maps when source maps is valid from an other loader (\`sass-loader\`): module 1`] = `
"// Imports
var ___CSS_LOADER_API_IMPORT___ = require(\\"../../../src/runtime/api.js\\");
exports = module.exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.id, \\"body {\\\\n  font: 100% Helvetica, sans-serif;\\\\n  color: #333;\\\\n}\\", \\"\\"]);
"
`;

exports[`"sourceMap" option false should not generate source maps when source maps is valid from an other loader (\`sass-loader\`): result 1`] = `
Array [
  Array [
    "./source-map/basic.scss",
    "body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}",
    "",
  ],
]
`;

exports[`"sourceMap" option false should not generate source maps when source maps is valid from an other loader (\`sass-loader\`): warnings 1`] = `Array []`;

exports[`"sourceMap" option false should not generate source maps: errors 1`] = `Array []`;

exports[`"sourceMap" option false should not generate source maps: module 1`] = `
"// Imports
var ___CSS_LOADER_API_IMPORT___ = require(\\"../../../src/runtime/api.js\\");
exports = module.exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\"]);
"
`;

exports[`"sourceMap" option false should not generate source maps: result 1`] = `
Array [
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
  ],
]
`;

exports[`"sourceMap" option false should not generate source maps: warnings 1`] = `Array []`;

exports[`"sourceMap" option not specified should not generate source maps: errors 1`] = `Array []`;

exports[`"sourceMap" option not specified should not generate source maps: module 1`] = `
"// Imports
var ___CSS_LOADER_API_IMPORT___ = require(\\"../../../src/runtime/api.js\\");
exports = module.exports = ___CSS_LOADER_API_IMPORT___(false);
// Module
exports.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\"]);
"
`;

exports[`"sourceMap" option not specified should not generate source maps: result 1`] = `
Array [
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
  ],
]
`;

exports[`"sourceMap" option not specified should not generate source maps: warnings 1`] = `Array []`;

exports[`"sourceMap" option true should generate source maps when source maps equal to "null" from an other loader: errors 1`] = `Array []`;

exports[`"sourceMap" option true should generate source maps when source maps equal to "null" from an other loader: module 1`] = `
"// Imports
var ___CSS_LOADER_API_IMPORT___ = require(\\"../../../src/runtime/api.js\\");
exports = module.exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"basic.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA;EACE,UAAU;AACZ\\",\\"file\\":\\"basic.css\\",\\"sourcesContent\\":[\\".class {\\\\n  color: red;\\\\n}\\\\n\\"]}]);
"
`;

exports[`"sourceMap" option true should generate source maps when source maps equal to "null" from an other loader: result 1`] = `
Array [
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
    Object {
      "file": "basic.css",
      "mappings": "AAAA;EACE,UAAU;AACZ",
      "names": Array [],
      "sources": Array [
        "basic.css",
      ],
      "sourcesContent": Array [
        ".class {
  color: red;
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option true should generate source maps when source maps equal to "null" from an other loader: warnings 1`] = `Array []`;

exports[`"sourceMap" option true should generate source maps when source maps equal to "undefined" from an other loader: errors 1`] = `Array []`;

exports[`"sourceMap" option true should generate source maps when source maps equal to "undefined" from an other loader: module 1`] = `
"// Imports
var ___CSS_LOADER_API_IMPORT___ = require(\\"../../../src/runtime/api.js\\");
exports = module.exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"basic.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA;EACE,UAAU;AACZ\\",\\"file\\":\\"basic.css\\",\\"sourcesContent\\":[\\".class {\\\\n  color: red;\\\\n}\\\\n\\"]}]);
"
`;

exports[`"sourceMap" option true should generate source maps when source maps equal to "undefined" from an other loader: result 1`] = `
Array [
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
    Object {
      "file": "basic.css",
      "mappings": "AAAA;EACE,UAAU;AACZ",
      "names": Array [],
      "sources": Array [
        "basic.css",
      ],
      "sourcesContent": Array [
        ".class {
  color: red;
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option true should generate source maps when source maps equal to "undefined" from an other loader: warnings 1`] = `Array []`;

exports[`"sourceMap" option true should generate source maps when source maps is valid from an other loader (\`postcss-loader\`): errors 1`] = `Array []`;

exports[`"sourceMap" option true should generate source maps when source maps is valid from an other loader (\`postcss-loader\`): module 1`] = `
"// Imports
var ___CSS_LOADER_API_IMPORT___ = require(\\"../../../src/runtime/api.js\\");
exports = module.exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"basic.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA;EACE,UAAU;AACZ\\",\\"file\\":\\"basic.css\\",\\"sourcesContent\\":[\\".class {\\\\n  color: red;\\\\n}\\\\n\\"]}]);
"
`;

exports[`"sourceMap" option true should generate source maps when source maps is valid from an other loader (\`postcss-loader\`): result 1`] = `
Array [
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
    Object {
      "file": "basic.css",
      "mappings": "AAAA;EACE,UAAU;AACZ",
      "names": Array [],
      "sources": Array [
        "basic.css",
      ],
      "sourcesContent": Array [
        ".class {
  color: red;
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option true should generate source maps when source maps is valid from an other loader (\`postcss-loader\`): warnings 1`] = `Array []`;

exports[`"sourceMap" option true should generate source maps when source maps is valid from an other loader (\`sass-loader\`): errors 1`] = `Array []`;

exports[`"sourceMap" option true should generate source maps when source maps is valid from an other loader (\`sass-loader\`): module 1`] = `
"// Imports
var ___CSS_LOADER_API_IMPORT___ = require(\\"../../../src/runtime/api.js\\");
exports = module.exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.id, \\"body {\\\\n  font: 100% Helvetica, sans-serif;\\\\n  color: #333;\\\\n}\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"/home/evilebottnawi/IdeaProjects/css-loader/test/fixtures/source-map/basic.scss\\",\\"basic.scss\\"],\\"names\\":[],\\"mappings\\":\\"AAGA;EACE,gCAAA;EACA,WAJc;ACEhB\\",\\"file\\":\\"basic.scss\\",\\"sourcesContent\\":[\\"$font-stack:    Helvetica, sans-serif;\\\\n$primary-color: #333;\\\\n\\\\nbody {\\\\n  font: 100% $font-stack;\\\\n  color: $primary-color;\\\\n}\\\\n\\",\\"body {\\\\n  font: 100% Helvetica, sans-serif;\\\\n  color: #333;\\\\n}\\"]}]);
"
`;

exports[`"sourceMap" option true should generate source maps when source maps is valid from an other loader (\`sass-loader\`): result 1`] = `
Array [
  Array [
    "./source-map/basic.scss",
    "body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}",
    "",
    Object {
      "file": "basic.scss",
      "mappings": "AAGA;EACE,gCAAA;EACA,WAJc;ACEhB",
      "names": Array [],
      "sources": Array [
        "/home/evilebottnawi/IdeaProjects/css-loader/test/fixtures/source-map/basic.scss",
        "basic.scss",
      ],
      "sourcesContent": Array [
        "$font-stack:    Helvetica, sans-serif;
$primary-color: #333;

body {
  font: 100% $font-stack;
  color: $primary-color;
}
",
        "body {
  font: 100% Helvetica, sans-serif;
  color: #333;
}",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option true should generate source maps when source maps is valid from an other loader (\`sass-loader\`): warnings 1`] = `Array []`;

exports[`"sourceMap" option true should generate source maps: errors 1`] = `Array []`;

exports[`"sourceMap" option true should generate source maps: module 1`] = `
"// Imports
var ___CSS_LOADER_API_IMPORT___ = require(\\"../../../src/runtime/api.js\\");
exports = module.exports = ___CSS_LOADER_API_IMPORT___(true);
// Module
exports.push([module.id, \\".class {\\\\n  color: red;\\\\n}\\\\n\\", \\"\\",{\\"version\\":3,\\"sources\\":[\\"basic.css\\"],\\"names\\":[],\\"mappings\\":\\"AAAA;EACE,UAAU;AACZ\\",\\"file\\":\\"basic.css\\",\\"sourcesContent\\":[\\".class {\\\\n  color: red;\\\\n}\\\\n\\"]}]);
"
`;

exports[`"sourceMap" option true should generate source maps: result 1`] = `
Array [
  Array [
    "./source-map/basic.css",
    ".class {
  color: red;
}
",
    "",
    Object {
      "file": "basic.css",
      "mappings": "AAAA;EACE,UAAU;AACZ",
      "names": Array [],
      "sources": Array [
        "basic.css",
      ],
      "sourcesContent": Array [
        ".class {
  color: red;
}
",
      ],
      "version": 3,
    },
  ],
]
`;

exports[`"sourceMap" option true should generate source maps: warnings 1`] = `Array []`;
