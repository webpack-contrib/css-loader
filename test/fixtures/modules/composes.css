@import url(test-other.css) (min-width: 100px);

@value v-def from './values.css';
@value v-other from './values.css';
@value v-other from './values.css';
@value s-white from './values.css';
@value m-small from './values.css';
@value v-something from './something.css';
@value v-foo: blue;
@value v-bar: block;
@value v-primary: #BF4040;
@value s-black: black-selector;
@value m-large: (min-width: 960px);

.ghi {
  color: v-def;
}

.class {
  color: v-foo;
}

.other {
  display: v-bar;
}

.other-other {
  width: v-something;
}

.green {
  color: v-other;
}

.foo {
  prop: v-def;
  duplicate: v-other;
}

.simple {
  color: red;
  composes: imported-simple from 'imported-simple.css';
}

.relative {
  color: yellow;
  composes: imported-relative from './relative.css';
}

.top-relative {
  color: gray;
  composes: imported-relative from '../modules/top-relative.css';
}

.module {
  color: gray;
  composes: imported-module from '~package/style.css';
}

.alias {
  color: gainsboro;
  composes: imported-alias from '~aliasesComposes/alias.css';
}

.primary-selector {
  color: v-primary;
}

.s-black {
  color: black;
}

@media m-large {
  .header {
    padding: 0 20px;
  }
}

.s-white {
  color: white;
}

@media m-small {
  .header {
    padding: 20px 20px;
  }
}

@value v-string: 'my-content';

a {
  content: v-string;
}

@supports (content: v-string) {
  a {
    content: v-string;
  }
}

[class~=v-string] {
  color:green;
}

@value v-empty-string: '';

a {
  content: v-empty-string;
}
